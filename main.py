import telebot
import requests
from bs4 import BeautifulSoup
import time
from random import choice
import speech_recognition as sr
import os
import uuid
from jokes import get_jokes
from currency import get_dollar, get_euro, get_ruble

chill_phrasess = ['–ó–∞—á–∏–ª—å—Å—è –±—Ä–∞—Ç–æ–∫! –ó–∞—Å–ª—É–∂–∏–ª', '–¢—ã —á–µ—Ä—Ç–æ–≤–∞ –º–∞—à–∏–Ω–∞! –û—Å—Ç–∞–Ω–æ–≤–∏—Å—å, –∏–Ω–∞—á–µ —É–Ω–∏—á—Ç–æ–∂–∏—à—å –ø–ª–∞–Ω–µ—Ç—É —Å–≤–æ–µ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é',
                  '–ü–∞—Ü–∞–Ω—ã –Ω–µ –≥–æ–Ω–∏—Ç–µ!\n\n–í—ã –º–∞—Ç–µ—Ä—è–º –Ω—É–∂–Ω—ã!']

url = 'https://yandex.kz/pogoda/karaganda/details?via=mf#28'
response = requests.get(url)
bs = BeautifulSoup(response.text, 'lxml')

whats_day = bs.find('span', class_='a11y-hidden')
table_temp_ = bs.find_all('div', class_='weather-table__temp')
temp_value_ = bs.find_all('span', class_='temp__value temp__value_with-unit')

morning = f"–£—Ç—Ä–æ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç {table_temp_[0].text.replace('‚Ä¶',' –¥–æ ')}, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {temp_value_[0].text}"
day = f"–î–Ω–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç  {table_temp_[1].text.replace('‚Ä¶',' –¥–æ ')}, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {temp_value_[1].text}"
evening = f"–í–µ—á–µ—Ä–æ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç {table_temp_[2].text.replace('‚Ä¶',' –¥–æ ')}, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {temp_value_[2].text}"
night = f"–ù–æ—á—å—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç {table_temp_[3].text.replace('‚Ä¶',' –¥–æ ')}, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {temp_value_[3].text}"

language='ru_RU'
r = sr.Recognizer()

print("–†–∞–±–æ—Ç–∞–µ–º")

TOKEN = ''
bot = telebot.TeleBot(TOKEN)

def currency_rate(message):
    bot.send_message(message.from_user.id, "–ö—É—Ä—Å –≤–∞–ª—é—Ç —á–µ–µ–µ–µ–µ–∫")
    bot.send_message(message.from_user.id, "–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ " + get_dollar()+'üí≤')
    bot.send_message(message.from_user.id, "–ö—É—Ä—Å –ï–≤—Ä–æ " + get_euro()+'üí∂')
    bot.send_message(message.from_user.id, "–ö—É—Ä—Å –†—É–±–ª—è " + get_ruble()+'üí¥')
def weather_report(message):
    bot.send_message(message.from_user.id, "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã —á–µ–µ–µ–µ–µ–∫")
    bot.send_message(message.from_user.id, f"{whats_day.text.replace(',', '').capitalize()}")
    bot.send_message(message.from_user.id, f"üåû{morning}")
    bot.send_message(message.from_user.id, f"üèÜ{day}")
    bot.send_message(message.from_user.id, f"üç∫{evening}")
    bot.send_message(message.from_user.id, f"üåõ{night}")

def pomodoro_work(message):
    bot.send_message(message.from_user.id, "Road to The Dream")
    bot.send_message(message.from_user.id, "–ù–∞—á–∏–Ω–∞–µ–º!")
    bot.send_message(message.from_user.id, "–ù–∞ —Å—Ç–∞—Ä—Ç!")
    bot.send_message(message.from_user.id, "–í–Ω–∏–º–∞–Ω–∏–µ!")
    bot.send_message(message.from_user.id, "–ú–∞—Ä—à!")
    for i in range(1,5):
        time.sleep(5*60)
        bot.send_message(message.from_user.id, f"–ü—Ä–æ—à–ª–æ {i*5} –º–∏–Ω—É—Ç!")
    bot.send_message(message.from_user.id, "–í—Ä–µ–º—è!!!")
     
def pomodoro_chill(message):
    bot.send_message(message.from_user.id, choice(chill_phrasess))
    time.sleep(5*60)
    bot.send_message(message.from_user.id, "–û—Ç–¥—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω!")

def recognise(filename):
    with sr.AudioFile(filename) as source:
        audio_text = r.listen(source)
        try:
            text = r.recognize_google(audio_text,language=language)
            print('Converting audio transcripts into text ...')
            print(text)
            return text
        except:
            print('Sorry.. run again...')
            return "–ò–∑–≤–µ–Ω–∏ –ø–æ–∂–∞–≤—É—Å—Ç–∞ –Ω–µ –ø–æ–Ω—è–ª..."

@bot.message_handler(content_types=['voice'])
def voice_processing(message):
    filename = str(uuid.uuid4())
    file_name_full="./voice/"+filename+".ogg"
    file_name_full_converted="./ready/"+filename+".wav"
    file_info = bot.get_file(message.voice.file_id)
    downloaded_file = bot.download_file(file_info.file_path)
    with open(file_name_full, 'wb') as new_file:
        new_file.write(downloaded_file)
    os.system("ffmpeg -i "+file_name_full+"  "+file_name_full_converted)
    text=recognise(file_name_full_converted)
    if '–ø—Ä–æ–≥–Ω–æ–∑' in text or '–ø–æ–≥–æ–¥' in text:
        weather_report(message)
    elif text == '–ø–æ–º–∏–¥–æ—Ä':
        pomodoro_work(message)
        pomodoro_chill(message)
    elif '–∫—É—Ä—Å' in text or '–≤–∞–ª—é—Ç' in text:
        currency_rate(message)
    elif '–∞–Ω–µ–∫–¥–æ—Ç' in text or '–ø—Ä–∏–∫–æ–ª' in text or '—à—É—Ç–∫' in text:
        bot.send_message(message.from_user.id, get_jokes())
    elif text == '–∏–¥–∏–Ω–∞—Ö—É–π' or text == '–∏–¥–∏ –Ω–∞—Ö—É–π':
        bot.send_message(message.from_user.id, "—Å–∞–º –∏–¥–∏ —á–µ—Ä—Ç –Ω–µ–º—ã—Ç—ã–π")
    else:
        bot.send_message(message.from_user.id, "–ò–∑–≤–µ–Ω–∏, –ë–æ—Å—Å, –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –ø—É–∫ üòî\n–ú–æ–∂–µ—à—å –ø–æ–≤—Ç–æ—Ä–∏—Ç—å? ü•∏")
    os.remove(file_name_full)
    os.remove(file_name_full_converted)

@bot.message_handler(commands=['start']) #—Å–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton("üåè –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
    btn2 = telebot.types.KeyboardButton("üçÖ –ü–æ–º–æ–¥–æ—Ä–æ")
    btn3 = telebot.types.KeyboardButton("ü§° –ê–Ω–µ–∫–¥–æ—Ç")
    btn4 = telebot.types.KeyboardButton("ü§ë –ö—É—Ä—Å –≤–∞–ª—é—Ç")
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)
    # markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å, –¥–æ—Ä–æ–≥–æ–π?)".format(message.from_user), reply_markup=markup)

#–º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == 'üåè –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã':
        weather_report(message)
    elif message.text == 'üçÖ –ü–æ–º–æ–¥–æ—Ä–æ':
        pomodoro_work(message)
        pomodoro_chill(message)
    elif message.text == "ü§° –ê–Ω–µ–∫–¥–æ—Ç":
        bot.send_message(message.from_user.id, get_jokes())
    elif message.text == "ü§ë –ö—É—Ä—Å –≤–∞–ª—é—Ç":
        currency_rate(message)
    elif message.text == '–ò–¥–∏ –Ω–∞—Ö—É–π':
        bot.send_message(message.from_user.id, "—Å–∞–º –∏–¥–∏ —á–µ—Ä—Ç –Ω–µ–º—ã—Ç—ã–π")
    else:
        bot.send_message(message.from_user.id, '–°—Ç–∞—Ä–æ–≥–æ –ø—Å–∞ –Ω–æ–≤—ã–º —Ç—Ä—é–∫–∞–º –Ω–µ –Ω–∞—É—á–∏—à—å! üê∫\n' +
        '–ü—Ä–æ—à—É –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –∏–º–µ—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞ üòã')

if __name__ == "__main__":
    bot.polling(none_stop=True, interval=1)
